#    Задать начальный интервал [X_{left}..X_{right}];
#     Убедиться, что на концах функция имеет разный знак;
#    Повторять
#        выбрать внутри интервала точку X;
#        сравнить знак функции в точке X со знаком функции в одном из концов;
#            если совпадает, то переместить этот конец интервала в точку X,
#            иначе переместить в точку X другой конец интервала;
#    пока не будет достигнута нужная точность")

import math


def f(x):
    return -(x ** 3) + x - 3


a, b, e, i = -2, -1.5, 0.001, 1

print(f'-x^3 + x - 3\ne = {e}\n[{a}, {b}]')

if f(a) * f(b) > 0:
    print('На данном интервале корней нет')

else:
    x_n = (a + b) / 2

    while math.fabs(b - a) >= e:
        print(f'Итерация {i}, Интервал: [{a}, {b}]')
        c = (a + b) / 2
        f_c = f(c)
        print(f'c = {c}')
        print(f'f(c) = {f_c}')
        x_n_prev = x_n

        if f_c == 0:
            x_n = c

        elif f(a) * f_c < 0:
            x_n = (a + c) / 2

        else:
            x_n = (c + b) / 2

        print(f'x = {x_n}')
        print(f'f(x) = {f(x_n)}')
        print(f'Приближение: {math.fabs(x_n - x_n_prev)}')
        print('~' * 50)

        if f(a) * f_c < 0:
            b = c

        else:
            a = c

        i += 1

    print(f'x = {x_n}')